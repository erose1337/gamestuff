dice-less game

Stats:
-----
            health                      energy (used by abilities)

Attributes:
-----
                    health/defense              energy/abilities            movement
                    -----                       -----------                 ---------
max increase   |    max health                  max energy                  max movement points
recovery amount|    health regeneration         energy regeneration         movement point regeneration
discount       |    minus to damage taken       minus to energy cost        minus to movement point cost
                    ("soak")                    ("grace")


Skills
-----

movement (1 extra movement per point)               offense (1 damage per point)
energy cost: 0                                      energy cost: 1 per point, per use
note: n/a                                           note: these are single target attacks
-----                                               ----
physical (run, jump, acrobatics, swim, etc)         hand to hand
flight                                              melee weapon
teleport                                            ranged attack/weapon (includes "magic"/etc)



defense (-x incoming damage per point)
energy cost: variable
note: n/a
----
defend (active)  (x: 1 per point, cost: 1 per block point, per use)
resist (passive) (x: 1 per point, cost: 0) (sub-skills each target 1 particular element)



misc
energy cost: variable
note: n/a
----
rest (active) (+ 1 energy recovery per point, cost: 0)
heal (active) (+ 1 health recovery per point, cost: 0)




Abilities
----
Abilities composed out of target(s) and effect(s)
Abilities have a range, area of effect, and/or a number of targets. Abilities can be actively used or passive
    Passive abilities cannot be "used" and cannot use "apply when used" effects

Effects may have: element, magnitude, influence (buff/debuff target), duration, trigger, summon type
    Only damage effects require an element type
    Damage effects may only influence stats (health and energy)
    Buff/Debuff effects may influence stats and attributes
    move influences position
    summon effects must have a summon type, indicating what is summoned


Target                                   Effect
note: increasing expensiveness           note: 1 ability can have more than 1 effect
-----                                    -----
- target (self)                          damage (must have element) (influences stats)
- target (close)                         heal
- target (far)                           buff
- (optional) area effect                 debuff
- multi target                           move
                                         summon

                                         Duration                   Trigger
                                         -----                      ------
                                         0 (instant)                apply when used
                                         x turns                    apply when effect_type applied
                                         until damaged              apply at beginning/end of turn
                                                                    passive (apply when passive ability is first taken)

effects
-----
     damage
     -----
     element: element_type
     influence: stats (health/energy/movement points)
     magnitude: x
     duration: x (0 = instant/one application)
     trigger: apply when: used/when effect_type applied/beginning or end of turn

     heal
     ----
     magnitude: x
     influence: stats (health/energy/movement points)
     duration: x (0 = instant, 1 = instant + next turn, ...)
     trigger: apply when: used/effect_type applied/beginning or end of turn

     (de)buff
     ----
     magnitude: x
     influence: attribute
     duration: x
     trigger: apply when: used/effect_type applied/beginning or end of turn

     movement
     ----
     magnitude: x
     trigger: apply when: used/effect_type applied/beginning or end of turn

     summon
     ----
     duration: x
     summon type: character type
     trigger: apply when: used/effect_type applied/beginning or end of turn



                                         name: passive_ability_name
                                         effects:


Attribute points and Ability points
----
Option 1
-----
Characters are granted X attribute points and Y ability points

- Creating an ability only costs 1 ability point, regardless of what it does
    - More powerful abilities require more energy to use
    - problem: passives would be arbitrarily powerful
- Increasing an attribute costs n attribute points, for n = f(level)

Option 2
----
Characters are granted X attribute points, Y active ability points, Z passive ability point

- Creating an active ability costs 1 ability point, regardless of what it does
    - More powerful abilities require more energy to use
- Creating a passive ability requires N points, determined by how potent the ability is
- Increasing an attribute costs n attribute points, for n = f(level)

Option 3
----
Characters are granted n XP points, which can be spent on attributes and abilities as desired

- Creating an active ability costs x XP points, for some constant x
    - at higher levels characters could acquire large numbers of abilities for negligible XP cost
- Creating a passive ability costs x XP points, determined by potency
- Increasing an attribute costs n XP points, for n = f(level)
- Increasing an affinity costs n XP points, for n = f(level)

Option 4
----
- Creating an active ability costs x XP points, for x = f(total xp)
    - Can limit how many active abilities a character can take
    - balancing xp between abilities and attributes could be difficult

Option 5
----
- Create a new active ability after acquiring enough total XP points, for cost 0 <= x <= y
    - Limits a characters active abilities
    - No difficulty deciding whether or not to take an ability or attributes
    - Can make "perks" that trade XP for more ability slots
- Creating a new passive ability requires `n` XP points, for n = f(ability_potency)
-

Option 6
----
On character creation, grant w attribute points, x affinity points, y ability points
    impose upper limit on ability potency


want:
    - freedom to design and create abilities as desired
    - possibility to upgrade existing abilities, so that abilities taken early on don't become worthless
        - option(s):
            - cost scaled to potency, pay with xp or ability points
            - new ability point(s) after N xp points

don't want:
    - players to simply take every possible kind of ability
        - must place some limit on how many abilities can be taken


Affinities

    + x soak against element_type damage effects
    - y cost when using element_type abilities







Quests/battles/world map/etc
=====

Time
====

Actions
-------
- Smallest unit of game activity
- Action typically implies selecting an option from those that are available


Events
-----
- Medium unit of game activity
- Consists of a sequence of Actions
- Events conclude with an Outcome
- Events can be one of the following types:

   - battles
   - collect resources
      - collect items
      - build something
   - obtain equipment
   - visit destination
      - interact with other characters
   - learn about/enable a new quest


Outcome
-------
- Reward stage that proceeds an Event
- Reward varies depending on Event type and outcome type
    - outcome type could be e.g. win/draw/lose


Quests
------
- Large unit of game activity
- Consists of a sequence of events and outcomes
- Concludes with an additional outcome


Space
=====

Place
-----------
- Namespace for events to occur in
    - may include quests
- A unit must be at a place to participate in the events in it


World
---------
- Consists of a graph of places and the links between them











Perception Skills
=================
-----------------

Vision
======
Increases the distance (number of squares) that the character can see.
A character can only see in front of them.
Squares behind the character are dimmed out, and retain the last state that the character saw them in.

The details (e.g. health bar) of objects that are far away are not visible.
Objects that are occluded are not visible.

X squares per point of vision
Can see details up to X squares away
Can see basic shapes up to XY squares away

X, Y should be defined in the rules file.


"Auspex"
--------
Ability to see "auras", even through obstacles and even when blind.
An "aura" indicates the presence of someone or something.
Detailed information may/may not be available.


"X-ray vision"
--------------
Ability to see through objects through one obstacle


Ability option to share senses between characters


Invisibility
------------
Subtracted from the perceiving characters Vision score.

Easier to remain invisible while further away.


Hearing
=======
Provides indicators of "what" and "where" when something occurs nearby.
For example:


                A -> <- B
                                /
                               /
                              C  ->  visible area for character C
                               \
                                \

C can hear A and B, but not see them. A and B face each other, and are fighting.

A and B both use attacks on each other. C's map now looks like:


                 *clang* *pow*
                A -> <- B
                                /
                               /
                              C  ->  visible area for character C
                               \
                                \


The sound effects appear on screen, in approximately the location or direction they originated from.
C's map does not show detail of A and B, indeed they may have even moved since they were last seen.
Hearing allows a character to have a sense of what is going on behind it.


A character can place a sound that occurs within X squares
A character can hear a sound that occurs within XY squares, but cannot determine the origin of the sound
A character cannot hear actions that occur further than XY squares away.


Prediction (e.g. Mind Reading)
============
See glimpses of what menu and/or selection a character is looking at using
Effective value: max(0, readers skill - distance - targets skill)

Effective value determines:

- How frequently the information becomes available
- Transparency level of the displayed information



Smell
=====
Smell is used to detect elements and affinities to them.
The location of effects (e.g. a fire burning on one square)







Backgrounds (aka Classes)
=======
- At certain total XP milestones, gain a level in a background
- Backgrounds provide attribute/affinity/perception bonuses and abilities
- Multiclassing provides versatility
- Specialization provides potency
- A background adds character
- Preset and user created options

Point values
------------
- some arrangement of 3 large increases, 3 moderate increases, and 3 small increases
- split between stats (attributes/affinities/perception)
- allow repeats or not?
    - But being able to dump them all into one attribute would be unbalanced
    - each attribute may have up to 1 large, 1 moderate, and 1 small increase










"Metamagic" Abilities
=====================
- Targets effects that are currently in play
    - increase or reduce the cooldown/magnitude/etc of existing effects






Power level icon
================
A symbolic "power level" icon appended to the characters name.

    R: sum(Health stats) / 3
    G: sum(Movement stats) / 3
    B: sum(Energy stats) / 3

Each stat is capped at 255. max(sum(Health stats) / 3) == 255.

Low attribute scores will make the color less visible.
High attribute scores will make the color more visible.
Approximately equal attribute scores will appear as grey.
Unbalanced attribute scores will appear colored.

Make it a colored 9-gon. Associate each vertex with attribute.
Color the vertex according to its magnitude.
Gives finer-grained detail





Super points pool
-----------------
Used to:

- temporarily increase a stat, affinity, perception
- temporarily enhance and ability or effect
- instantly recover health, energy, or movement points
- activate some powers


- provides a "critical hit"-like feature to gameplay
    - normally, the traditional mechanic for critical hits involves randomness
    - here, critical hits are used strategically instead of randomly




Use energy pool for movement points
-----------------------------------
Simplifies by reducing the number of pools.
Can only reasonably expect a player to be able to keep track of and understand 3-5 pools at most.
More than that would likely overwhelm new players.
If the super points pool is used, then this should really be considered
