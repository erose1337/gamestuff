#from math import log
#
#DEFAULT_CHUNK_SIZES = [32, 64, 128, 256, 512, 1024]
#CHUNK_CACHE = {}
#
#def memoized(cache):
#    def decorate(function):
#        @wraps(function)
#        def new_call(length, chunk_sizes):
#            try:
#                return cache[(length, chunk_sizes)]
#            except KeyError:
#                return function(length, chunk_sizes)                            
#        return new_call
#    return decorate
#    
#@memoized(CHUNK_CACHE)
#def get_chunk_position(length, chunk_sizes=DEFAULT_CHUNK_SIZES):
#    chunk = chunk_sizes[(max(log(item.h, 2), 4) - 4)]
    

       
       
# set texture dirty flag -> redraw object on new frame
#                               - extend instruction list with drawing instructions
#                               - if necessary, allocate a new position in the texture
#                               - create a new copy instruction (object_area, object_area + screen_offset + object_offsets)
# self.draw(self.copy_instructions)
# for  object in window_objects:
#     renderer.copy(texture, object_area, object_area + screen_offset + object_offsets)

# | - - - - - |
# |           |
# |           |
# |           |
# | - - - - - |       


Stats
------------
    
- increased via points and assignment
- stat points gained from: combat experience
- combat experience factors:
    - min(1, (target_base + target_level - self_level)) * min(1.0, (damage_dealt_to_target / target_health))
    - difficulty * participation 
    - being at a much higher level against a low value target = less experience
    - dealing insignificant amounts of damage to a target = less experience
- combat experience levels:
    - advance every 10n*log(n) points, where n = level
    - 1: 10
    - 2: 20
    - 3: 30 * 1 = 30
    - 4: 40 * 2 = 80
    - 5: 50 * 2 = 100
    - 6: 60 * 2 = 120
    - 7: 70 * 2 = 140
    - 8: 80 * 3 = 240
    - 9: 90 * 3 = 270
    ...
    - 32: 320 * 4 = 1280
    - must defeat >= 10 * log(n) opponents of equal level to advance one level    
    
physical stats: 
    - strength
        - bonus to weapon damage
    - agility
        - bonus to chance to dodge 
        - bonus to attack speed
    - endurance
        - increases max energy
        - decreases energy costs
        - increases damage soak 
     
misc stats:
    - health
        - increases max health
        - increases rate of health regeneration        
        
    - luck
        - increases damage sometimes        
        - increases chance to dodge sometimes
        - increases damage soaked sometimes
        - increases chance of finding more and better items
        
        - active skills:
            - pray
                - further increases one of the influenced categories
                - decreases luck rating gradually while active
            - miracle
                - guarantees next hit happens with an increase in one of the influenced categories applied
                - expends luck rating with every use
        
magical stats:
    - potency
        - bonus to spell intensity
    - wits
        - bonus to chance to dodge
        - increases cast rate
    - willpower
        - increases max energy
        - decreases energy costs
        - increases damage soak
        
Skills
------

- increased by use


weapon skills: 
    - experience points gained on successful attack with the relevant weapon
        - amount equal to damage dealt?
    - level curve: 10n * log(n)
        - 1: 10
        - 2: 20
        - 3: 30
        - 4: 80        
        - must deal 10 * level * log(level) damage to advance one level        
    - melee
        - sword, axe, dagger, etc
    - ranged
        - bow, crossbow, throwing objects, etc
    - magic
        - wand, sceptre, orb, etc
    
    - increases damage with associated weapon type
    - increases speed with associated weapon type
    
armor skills:
    - experience points gained when struck while wearing the appropriate armor    
        - experience points = damage received
    - level curve: 10n * log(n)
        - must receive 10 * level * log(level) damage to advance
    - unarmored
        - increases dodge
    - light armor
        - increases soak
    - heavy armor    
        - large increase to soak, decreases agility and decreases cast rate (higher levels decrease the penalty)
        
    - increases bonuses
    - decreases penalties
    
item system:
    - building blocks are called "Resources", i.e. wood, ores, raw food
    - all Items are assembled from resources, other items, and possibly catalysts
        - parts should interchangeable rather then 1:1 typed
            - i.e. only use "short handle" rather then "knife handle", "hammer handle", "hatchet handle", etc
        - catalysts are consumables such as coal and water
        - some items may require certain tools to be crafted (i.e. you require a hammer to assemble a knife from a handle and blade)
    - all items can be disassembled into component items and resources
    
        
crafting skills: 
    - experience gained when crafting a new item
    - level curve: 10n * log(n)
        - experience points = item level
        - must create 10 * log(level) items of equal level to advance one level in skill        
    - weapon and armor crafting
        - assemble from different types of pieces
            - i.e. a knife is built from a handle and blade
            - different designs call for different pieces
            - pieces can be made of different materials of varying quality
            - some pieces may be extensible and allow more pieces to be attached
                - Can turn a X slot item into a Y slot item
                    - i.e. a knife is composed of 2 parts, but if those 2 parts each are composed of two parts, the knife is composed of 4 parts
                        - This matters because of the stat bonuses associated with each part
        - material types include various woods and metals
            - can have different stats and associated properties
        - higher level influences item adds bonuses to stats
        - equipment can have slots for decorations/runes/jewels/etc
        - makers mark ingredient attaches character name to item description
        
    - magic spell crafting
        - assemble new spells from different types of motions and incantations
            - i.e. a hand wave and some magic words
            - different spells require different steps and materials
            - additional ritual objects may be required as well
                - ritual objects may be of different materials and varying quality
                - materials may include gems, spell books, potion ingredients, etc
        - higher skill level increases spell stats
            
    - potions
        - assemble potions from different types of recipes and ingredients
            - recipes and ingredients may be of different materials and varying quality
                - materials include spiderwebs, bones, plant matter, etc
                    - different materials provide different effects
        - higher skill level increases quality and quantity
        
    - enchanting
        - enchant equipment with effects using recipes and ingredients
        - higher skill level increases stat bonuses
        
crafting materials:        
    - woods
    - metals

        
weapon types:
    - melee
        - unarmed and gloves
            - shortest reach, smallest damage, fastest attack speed
                - low damage output stems from low armor penetration
            - unarmed is the default off hand and main hand weapon                   
        - knife
            - short reach, small damage, fast attack speed
            - components: handle, blade
        - sword
            - medium reach, medium damage, medium attack speed
            - components: handle, blade
        - blunt
            - medium reach, medium damage, medium attack speed
            - components: handle, shaft
        - axe
            - short reach, high damage, slow attack speed
                - higher damage comes from armor penetrating chopping power
            - components: handle, blade
        - great sword
            - high reach, medium damage, slow attack speed
            - components: handle, blade
        - polearm
            - high reach, high damage, slowest attack speed
                - deals slicing damage from far away
                - deals blunt damage from medium range or closer
            - components: handle, shaft, blade
        - shield
            - enhances block skill
            - is armor, despite being in a weapon slot
            - components: handle, body            
               
        
        - handle components influence:
            - attack speed
            - durability
        - blade components influence:
            - min/max damage
            - sharpness
        - shaft components influence:
            - min/max damage
            - impact
            
        - shield handle influences:
            - chance to dodge 
            - movement speed
            - clasp handle component can enable attaching a shield to the off hand even when a 2 handed weapon is wielded
        - shield body influences:
            - damage reduction %
            - damage soak
            
    - ranged
         (reach is relative to ranged weapons, not melee weapons)
        - throwing
            - short reach, smallest damage, fastest attack speed        
            - the ammunition is the weapon
            - components: weapon specific
        - bow
            - medium reach, medium damage, medium attack speed
            - two handed
            - weapon requires appropriate ammunition
            - components: frame, string
        - crossbow
            - high reach, high damage, slow attack speed
            - two handed
            - weapon requires appropriate ammunition
            - components: frame, string
        - ammunition:
            - damage rating
            - components: flights, shaft, tip
                       
        - frame influences:
            - damage min/max
            - attack rate
        - string influences:
            - durability
            - projectile speed
            
        - ammunition flights:
            - influence projectile speed
        - ammunition shaft:
            - influences projectile speed
        - ammunition tip:
            - influences min/max damage
            
    - magic
        - wand
            - small projectile speed/homing/critical increase, small potency increase, large cast rate increase
            - components: core, body
        - staff
            - small projectile speed/homing/critical increase, large potency increase, small cast rate increase
            - components: body, crystal
        - charm
            - large projectile speed/homing/critical increase, small potency increase, small cast rate increase
            - components: item specific
        - spell book
            - off hand/can only equip one
            - various stat modifications
            - components: item specific
        
        - wand core influences:
            - cast rate
            - projectile speed
        - wand body influences:
            - potency
            
        - staff crystal influences:
            - cast rate
            - projectile speed            
        - staff body influences:
            - potency
                            
        
attack modes:
    - prioritize speed
    - prioritize min and max damage
    - prioritize defence 
    
defence modes:
    - prioritize dodge
    - prioritize soak
    - parry (no dodge/soak boost but counter attacks are possible)    
        
casting modes:
    - prioritize casting speed
    - prioritize potency
    - prioritize projectile speed, homing, and criticals
    
magic:
    - Various types of elements, in pairs that are opposites:
        - fire
        - cold
        
        - electric
        - earth
        
        - light
        - void
        
        - poison
        - life
        
        - air
        - telekinesis
        
    - projectile spells have a % chance to home in on their target/guarantee to hit that increases with level
    - spell cost decreases with level
        - lower level spells may become free at higher levels
    - requires item to be able to unlock new elements?
     
    - different targeting modes
        - cast on self
        - cast on area surrounding self
        - cast on remote area
    - each effect has an element type
    - casting time, cooldown, and cost of spell increases based on # and power of effects
    - two casting types
        - cast once - the cast button is pressed once and the spell begins
        - maintained cast - the cast button is held down for the duration of the spell
    - durations
        - instant/once
        - lingering effect (i.e. on fire)
        - permanent
        
passive skills:
    - increases certain stats or skills while active; may increase costs or decrease other stats or skills
    
active skills:
    - weapon based skills
    
    
# stats
weapon stats:
    - damage min/max
    - attack speed
        - does not apply to spell casting
        - opposing stat: dodge cooldown 
        - it is easier to dodge slower weapons            
    - durability rating
        - cannot equip at 0 durability
        - components can become damaged/destroyed if item is worn at 0 durability
    - bladed weapons have a sharpness rating
        - increases damage relative to targets damage soak ability
            - effectively decreases targets damage soak ability        
        - applies to bladed munitions
        - can cause bleeding (lost health over time) (possibility to become infected (+ poison damage over time))
    - blunt weapons have an impact rating
        - increases damage relative to targets damage soak ability
            - effectively decreases targets damage soak ability
        - can cause bruising (reduced benefits/extra penalties to associated area)
            - i.e. bruised leg reduces movement speed        
            
    - projectile speed modifier
        - does not apply to melee weapons
        - does apply to spells
    
    - cast rate modifier
        - only applies to spells
    
    
armor stats:
    - damage % reduction       
        - protects against all attacks
            - may have higher/lower values depending on material and oncoming damage type            
    - damage soak min/max     
        - soak works the best against many weak attackers simultaneously dealing small amounts of damage
    - chance to dodge modifier        
        - cooldown timer means that dodge works the best against a slowly attacking, high damage opponent        
    - movement speed modifier
        - increased inertia (resistance to speeding up and slowing down)
        - decreased max speed                 
    - application order: dodge -> soak -> damage % reduction
        - attempt to dodge first
        - reduce damage by soak amount
        - reduce damage by % amount      
        
spell stats:
    - potency min/max
        - potency determines damage for spells that are damaging
        - determines magnitude of other effects accordingly (i.e. amount of health restored for a healing spell)
        - magic analogue to the physical damage min/max
    - cast rate and cooldown timer
        - magic analogue to the physical attack speed
    - chance to home onto target
        - magic analogue to chance to hit modifier
    
    - projectile speed modifier
        
    
  
  
gameplay/combat options
    - diablo style hack and slash
        - capturing enemies is not so fun
            - having a companion in diablo 2 was a boring necessity
    - turn based strategy (a la dragon warrior)
        - capturing enemies is fun
        - combat itself may be less then exciting 
    - monster hunter in 2d top down view 
        - capturing enemies could be fun 
        - combat is fun
        
        
        
graphics stuff
    - each character has a sprite
    - pack mode: layer
        - does not modify x, y coordinates
    - hotkeys for movement
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
level system
--------
total xp: 1     level 0
total xp: 10    level 1
total xp: 100   level 2
total xp: 1000  level 3
...                
total xp: 10**x -> level x

generalized: xp_base ** n -> required xp to be level n

task value: 
task level ->   level 0 -> 1   <-- xp gained for completion (i.e. beating level 0 opposition)
ie monster lvl  level 1 -> 10  <-- xp gained for completion (i.e. beating level 1 opposition)
                level 2 -> 100 <-- xp gained for completion (i.e. beating level 2 opposition)
            
    
stats 
=======

health
------
level structure: 
    + 1 xp per damage taken
    max health: 10 ** x    
    
    sub-skills
    ----------
    toughness:
        reduces damage taken (100% chance to soak small amount of damage)
        damage reduced via toughness still counts towards health experience
        level structure:
            damage soaked per hit: 2 ** x
            + 1 toughness xp per damage soaked
        
    avoidance: (dodge? aversion?)
        percent chance to reduce damage from a projectile/ranged source by a percent amount
        damage avoided does not count towards health experience
        level structure:
            2 * x % chance to reduce ranged damage by 2 * x %
            + 1 avoidance xp per damage successfully avoided
    
    notes
    --------
    melee combatants will tend to develop higher health and toughness levels then ranged combatants
     
          
strength
-------    
level structure:
    + 1 xp per damage dealt
    weapon damage bonus: 10 ** (x - 1)      # level 1: + 1, level 2: + 10, level 3: +100
    
    
    
combat
======
during combat, characters have a pool of available action points
turn based game: action points determine how many actions you can take during your turn
real time game : action points determine how many actions per section you can perform

two methods to attack a character: weapon attack and skills

weapon attack
-------
All attacks deal damage randomly in the range (0 + proficiency_bonus, weapon_damage + strength_damage)
weapon_damage and strength_damage are therefore single numbers which added together represent the max damage

weapon proficiency
-------
Attacks with a weapon provide xp in the weapons proficiency 

level structure:
    + 1 xp per damage dealt with associated weapon
    minimum damage bonus: 5 ** (x - 1)
    

    
    
    
   


how to solve trading
----
make items less of a focus then skills/personal character development
- items can have history and level up with the user
    - bonus is attached to one particular instance of the item in question
    - though the item is tradeable, the history is not.
        - make the history more valuable then the item, and the item becomes unlikely to be traded 
    - use basic level up system, i.e.: 
        - x damage dealt with weapon: history level  = log10(x)
        - x damage saved because of armor: history level = log10(x)
        - etc

    
    
    
3 attack types, 3 defence types

attack
----
critical hit: % chance to deal % extra damage    (+ maximum damage)
wounding/persistence/aggression?: deals x damage per time            (+ damage per second)
strength: + x extra damage                   (+ minimum damage)


defence
----
dodge: % chance to avoid % of damage      (+ defence against high maximum damage and slow big attacks)
regeneration: restores x health per time      (+ defence against high damage per second)
soak: -x damage taken per hit          (+ defence against high minimum damage and lots of small attacks)


gain attack and defence xp as you fight
    - choose one attack skill to advance
    - choose one defence skill to advance
    - level up increases increases each selected skill by 1
    - level up increases hit points by 10
        
level 1: 10 hp
          1 dpt
          doesn't work because of flat damage bonus == 100% chance to do 100% extra damage
                                   
        100 hp
        10 dpt
        damage per 100 ticks:
            1 strength: 100 * (10 + 1) == 1100    100 * 10 + (1 * 100 * .1 * d * L)
            2 strength: 100 * (10 + 2) = 1200
            1 critical: 100 * 10 + (.15 * 100 * .66 * 10) == 1100    
            2 critical: 100 * 10 + (.15 * 100 * 2 * .66 * 10) == 1198  
            1 DOT: 100 * 10 + (.33 * 100 * .3 * 10 * 1) == 1100
            2 DOT: 100 * 10 + (.33 * 100 * .3 * 10 * 2) == 1200
            
        damage avoided per 100 ticks, assuming 10 damage per tick:
            1 soak: 100 * (10 - 1) == 900
            2 soak: 100 * (10 - 2) == 800
            1 regen: 100 * 10 - (.33 * 100 * .03 * 100)                                    
            2 regen: 100 * 10 - (.33 * 100 * .03 * 100 * 2)
                                
            1 dodge: 100 * 10 - (.15 * 100 * .66 * 10) = 900     
                                 
                                 
                                 10% chance to deal 100% more damage
                 critical hit--> 15% chance to deal/reduce 66% more damage  <------ dodge
                                 20% chance to deal/reduce 50% more damage
                 DOT ----------> 33% chance to deal/reduce 30% more damage  <------ regen
                                 50% chance to deal/reduce 20% more damage
                 strength ----->100% chance to deal/reduce 10% more damage  <------ soak
        
                 core formula: time * damage + (chance * time * bonus * damage * Level)   
                                      damage + (chance * bonus * damage * Level)
                 
combat style options:    
    alternating turns:
        1 move per player
        action points pool
    simultaneous turns:
        1 move per time
        action points pool
    number of participants in combat:
        1v1
        NvK
    1v1, 1 move per participant: pokemon
    1v1, action points pool: MtG
    NvK, 1 move per participant: dragon warrior
    NvK, action points pool: fallout
    
    
    
    
battle style options:
    Fair fight: 1v1 with equal level
    Boss fight: 1v1 or 1vk or NvK with special opponent (preset levels/dynamically generated combinations)
        - might be higher level then player by significant margin
    Brawl: 1vk with varied level with equivalent level    
    Rumble: NvK with equivalent levels
    
quest options:
    presets
        The Duel - tutorial to get character from level 0 to level 1
        
    dynamically generated
        - hunt
            - defeat X opponents of type Y
            - gather X drops from opponent of type Y
        - gather
            - requires going to particular location
                - can put battles in the way
            - gather x items
                - can put a limit on inventory size
            - gather x, y, z different items
                - can require obtaining items in order (or not)
        - deliver
            - be given item(s) to take to a particular location
                - can put battles in the way
        
                
element type ideas:    
    - at character creation choose (at least) one element        
        - Element X deals extra damage against element Y and less damage against element Z              
              weak         element   strong
            - water    <-  fire      +> air
              fire     <-  air       +> stone
              air      <-  stone     +> electric
              stone    <-  electric  +> water
              electric <-  water     +> fire                                         
            - fire - air - stone - electric - water 
            
        - Element X receives extra damage from element Y and less damage against element Z
            - Taking more elements is not necessarily better
        - Element determines DoT type
            - which effect hits can be random, if multiple elements are possible
        - "excellence" - no element
            - just a mundane individual with exceptional skill
            - no penalties, but no advantages
            
    earth/stone fire water/ice air/electric death/poison life dragon magic pierce slash smash             
    two dimensions:
        - X increased damage against some element
        - X decreased damage against some other element
            - X = 50%    
    
    # incorporate changes for DoT display string
        - customizable strings for each skill activation    
    make training dummy for explaining combat
                 
                 
combat options:
    guard - tank damage for another target
        - effectively moves dodge/regen/soak points to other team members
            - the guard will take damage instead of the protected target
                - possibility target will take damage anyways?
                - dot effect always hits intended target?
    heal - apply regen effect to target instead of caster
        - requires hard points in regen
        - effectively moves regen points to target participant
    
    attack - attack a specific participant
        - damage may end up hitting a guard instead of target
        
active abilities:
    each skill has different abilities
        - using them temporarily consumes X skill levels
        - skills can be restored:
            - via location
                - points become precious and cannot be easily restored
                - i.e. town
            - via items
                - points can be slightly expensive
                - effectively trades a future turn to activate an ability
            - via time
                - very slow or very fast
                    - fast: every x combat turns
                    - slow: every x 
            - via location + items
    Toggle abilities:
        5 levels. Each toggle drains X attack (or defense)  points per turn
        critical hit:
            focus: +15*X% crit chance 
        dot:
            intensity +10*X% chance to activate, +1.5*X extra damage         
        strength: 
            super strength: +X strength (+X extra damage)
        dodge:
            celerity: +5*X% chance to dodge, +1.5*X damage avoided
        regen:            
            adrenaline: +10*X% chance to activate, +1.5*X health restored           
        soak:
            dauntless: *(X + 1) damage soaked    
    Active abilities:
        critical hit:
        dot:
        strength:
        dodge:
        regen:               
            heal:  restores 3 * X health to a target            
        soak:
        
    # include "abilities" menu in combat
    # toggle abilities drain X points per turn
    # include description of abilities somewhere (character creation or character screen)
        